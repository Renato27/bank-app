version: '3'
services:

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    expose:
      - 9000
      - 80
    volumes:
      - ./api:/laravel-app
    env_file:
      - ./api/.env
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: .docker/entrypoint.sh
    networks:
      - app-network

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/react-app
      - /react-app/node_modules
    env_file:
      - ./frontend/.env
    expose:
      - 3000
    stdin_open: true
    # tty: true
    depends_on:
      - laravel
    networks:
      - app-network

  nginx:
      image: lscr.io/linuxserver/swag:latest
      container_name: nginx
      cap_add:
        - NET_ADMIN
      env_file:
        - .env
      environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TIMEZONE}
        - URL=${DOMAIN}
        - VALIDATION=http
        - SUBDOMAINS=${SUBDOMAIN}
        - ONLY_SUBDOMAINS=true
      ports:
        - '443:443'
        - '80:80' 
      volumes:
        - /swag/:/config
        - ./nginx/nginx.conf:/config/nginx/site-confs/default.conf
      restart: unless-stopped
      depends_on:
        - api
        - frontend
      networks:
        - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge